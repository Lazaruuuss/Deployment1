# Generated by Django 3.0.14 on 2022-05-29 07:53

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.EmailField(max_length=254, unique=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='middle_name')),
                ('age', models.IntegerField(verbose_name='age')),
                ('birthday', models.DateField(verbose_name='birthday')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('NB', 'Non-Binary'), ('T', 'Transgender'), ('I', 'Intersex'), ('IPNTS', 'I prefer not to say')], default='Male', max_length=50, verbose_name='gender')),
                ('home_address', models.CharField(max_length=50, verbose_name='home_address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'dragonladyApp_Registration',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApplyLoan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_be_paid', models.IntegerField(verbose_name='to_be_paid')),
                ('loan_date', models.DateField(verbose_name='loan_date')),
                ('amount_of_loan', models.IntegerField(verbose_name='amount_of_loan')),
                ('mode_of_loan_transfer', models.CharField(choices=[('GC', 'Gcash'), ('PM', 'Paymaya'), ('PP', 'Paypal'), ('BDO', 'BDO'), ('WI', 'Walk-In')], default='Gcash', max_length=50, verbose_name='mode_of_loan_transfer')),
                ('email_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dragonladyApp_ApplyLoan',
            },
        ),
        migrations.CreateModel(
            name='ApplyPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(verbose_name='payment_date')),
                ('remaining_balance', models.IntegerField(verbose_name='remaining_balance')),
                ('amount_paid', models.IntegerField(verbose_name='amount_paid')),
                ('mode_of_payment', models.CharField(blank=True, choices=[('GC', 'Gcash'), ('PM', 'Paymaya'), ('PP', 'Paypal'), ('BDO', 'BDO'), ('WI', 'Walk-In')], default='Gcash', max_length=50, verbose_name='mode_of_payment')),
                ('email_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dragonladyApp.ApplyLoan')),
            ],
            options={
                'db_table': 'dragonladyApp_ApplyPayment',
            },
        ),
    ]
